* Improve rdoc documentation for public use. README should cover
  justification, installation, and how to handle the resulting exceptions.
  The assert_request method should be documented with the actual usage and
  examples.

* Improve accuracy and format of log errors for method and protocol. 

* Switch params variable specifications from symbols to strings, since this is
  how params are expressed anyway. We artificially limit ourselves by using
  :name => :string instead of "name" => "string". For example, someone may
  really want an HTML form parameter called "first-name", and the dash
  wouldn't be allowed as a symbol. This just needs to be done in the tests
  and documentation -- doesn't require any code changes.

* The "Rules" classes have things backwards -- they should initialize with
  the requirements, and then validate the params. Right now they're doing it
  the other way around.

* Consider switching to same license as rails -- MIT.

* Make new release.

* Blog, post, comment, and email about it. Seek suggestions for improvement.

* I think that forms using alternate methods in forms (such as :method =>
  :put) still show up as request.method == :post.

* (Maybe) Support for regular expressions, e.g. :email => /\w+@\w+/ . Not
  useful for user input (use validation instead), but might be handy for when
  accepting action-to-action arguments (e.g. hidden form fields) that
  shouldn't be messed with.

* Verify that RESTful aspects (the stuff after the semicolon) are supported
  properly. This should be handled at the routing level though, so it should
  be OK -- the stuff after the semicolon should simply get interpreted as the
  action.
